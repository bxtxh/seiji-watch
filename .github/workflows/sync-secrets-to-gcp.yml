name: Sync GitHub Secrets to GCP Secrets

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment (staging/production)'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  sync-secrets:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
    
    - name: Sync Airtable PAT to GCP
      run: |
        echo "${{ secrets.AIRTABLE_PAT }}" | gcloud secrets versions add seiji-watch-airtable-pat-${{ github.event.inputs.environment }} --data-file=-
        echo "✅ Airtable PAT synced to GCP"
    
    - name: Sync Airtable Base ID to GCP
      run: |
        echo "${{ secrets.AIRTABLE_BASE_ID }}" | gcloud secrets versions add seiji-watch-airtable-base-id-${{ github.event.inputs.environment }} --data-file=-
        echo "✅ Airtable Base ID synced to GCP"
    
    - name: Sync OpenAI API Key to GCP (if exists)
      run: |
        if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then
          echo "${{ secrets.OPENAI_API_KEY }}" | gcloud secrets versions add seiji-watch-openai-api-key-${{ github.event.inputs.environment }} --data-file=-
          echo "✅ OpenAI API Key synced to GCP"
        else
          echo "⚠️ OpenAI API Key not found in GitHub Secrets"
        fi
    
    - name: Restart API Gateway with new secrets
      if: github.event.inputs.environment == 'staging'
      run: |
        gcloud run services update seiji-watch-api-gateway-staging \
          --region=asia-northeast1 \
          --timeout=300
        echo "✅ API Gateway restarted with new secrets"
    
    - name: Verify API Gateway health
      if: github.event.inputs.environment == 'staging'
      run: |
        sleep 30  # Wait for service to restart
        curl -f "https://seiji-watch-api-gateway-staging-496359339214.asia-northeast1.run.app/health" || exit 1
        echo "✅ API Gateway health check passed"
    
    - name: Test real data access
      if: github.event.inputs.environment == 'staging'
      run: |
        # Test bills API
        response=$(curl -s "https://seiji-watch-api-gateway-staging-496359339214.asia-northeast1.run.app/api/bills/search?q=予算&max_records=1")
        if echo "$response" | grep -q '"detail".*"error"'; then
          echo "⚠️ API still returning errors: $response"
          exit 1
        else
          echo "✅ Real data API test successful"
          echo "Response sample: $response" | head -c 200
        fi