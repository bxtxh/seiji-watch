# ===================================================
# Docker Compose - Test Configuration
# ===================================================
# Use for running tests in CI/CD
# docker-compose -f docker-compose.yml -f docker-compose.test.yml up

services:
  # ===========================================
  # Test Runner Service
  # ===========================================
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: seiji-watch-test-runner
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://seiji_watch_user:seiji_watch_pass@postgres:5432/seiji_watch_test
      - REDIS_URL=redis://redis:6379/1
      - PYTHONUNBUFFERED=1
      - NODE_ENV=test
    volumes:
      - .:/workspace:ro
      - test_results:/test-results
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - data-tier
      - backend-tier
      - frontend-tier
    command: ["/workspace/scripts/docker/run-all-tests.sh"]

  # ===========================================
  # Override Services for Testing
  # ===========================================
  
  postgres:
    environment:
      - POSTGRES_DB=seiji_watch_test
      - POSTGRES_LOG_STATEMENT=all
    tmpfs:
      - /var/lib/postgresql/data  # Use memory for faster tests

  redis:
    command: redis-server --save ""  # Disable persistence for tests

  api-gateway:
    build:
      target: test
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://seiji_watch_user:seiji_watch_pass@postgres:5432/seiji_watch_test
      - LOG_LEVEL=DEBUG
    command: ["pytest", "-v", "--cov=src", "--cov-report=xml:/test-results/api-gateway-coverage.xml"]

  web-frontend:
    build:
      target: test
    environment:
      - NODE_ENV=test
      - NEXT_PUBLIC_API_URL=http://api-gateway:8000
    command: ["npm", "run", "test:ci"]

  data-processor:
    build:
      target: test
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://seiji_watch_user:seiji_watch_pass@postgres:5432/seiji_watch_test
    command: ["pytest", "-v", "--cov=src", "--cov-report=xml:/test-results/data-processor-coverage.xml"]

  diet-scraper:
    build:
      target: test
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://seiji_watch_user:seiji_watch_pass@postgres:5432/seiji_watch_test
    command: ["pytest", "-v", "--cov=src", "--cov-report=xml:/test-results/diet-scraper-coverage.xml"]

  stt-worker:
    build:
      target: test
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://seiji_watch_user:seiji_watch_pass@postgres:5432/seiji_watch_test
    command: ["pytest", "-v", "--cov=src", "--cov-report=xml:/test-results/stt-worker-coverage.xml"]

  vector-store:
    build:
      target: test
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://seiji_watch_user:seiji_watch_pass@postgres:5432/seiji_watch_test
    command: ["pytest", "-v", "--cov=src", "--cov-report=xml:/test-results/vector-store-coverage.xml"]

  notifications-worker:
    build:
      target: test
    environment:
      - ENVIRONMENT=test
      - DATABASE_URL=postgresql://seiji_watch_user:seiji_watch_pass@postgres:5432/seiji_watch_test
    command: ["pytest", "-v", "--cov=src", "--cov-report=xml:/test-results/notifications-worker-coverage.xml"]

# ===========================================
# Test-specific volumes
# ===========================================
volumes:
  test_results:
    driver: local