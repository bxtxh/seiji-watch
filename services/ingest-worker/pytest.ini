[tool:pytest]
# pytest configuration for Policy Issue Extraction tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output formatting
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --durations=10
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-fail-under=80

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for workflow testing  
    performance: Performance and scalability tests
    slow: Tests that take a long time to run
    requires_api: Tests that require external API access
    requires_db: Tests that require database access

# Test timeout
timeout = 300

# Async test support
asyncio_mode = auto

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Ignore warnings from dependencies
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:janome.*